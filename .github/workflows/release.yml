name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

jobs:
  build_artifacts:
    name: Build Artifacts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos:
          - linux
          - windows
          - darwin
        goarch:
          - amd64
          - arm64
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "^1.24"

      - name: Check out code
        uses: actions/checkout@v4

      - name: Set Asset Path
        shell: bash
        run: |
          if [[ "${{ matrix.goos }}" == "windows" ]]; then
            echo "ASSET_PATH=bin/sshttproxy-${{ matrix.goos }}-${{ matrix.goarch }}.exe" >> $GITHUB_ENV
          else
            echo "ASSET_PATH=bin/sshttproxy-${{ matrix.goos }}-${{ matrix.goarch }}" >> $GITHUB_ENV
          fi

      - name: Build Binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: go build -v -o ${{ env.ASSET_PATH }} ./cmd/proxy/main.go

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sshttproxy-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ${{ env.ASSET_PATH }}

  create_release:
    name: Create GitHub Release
    needs: build_artifacts
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: List downloaded files (debug)
        run: ls -R ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**/*
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
